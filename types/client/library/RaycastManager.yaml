name: RaycastManager
type: library

methods:
  -
    name: GetEntityInRaycast
    params:
      distance:
        type: float
    returns:
      type: Entity
      nullable: true
  -
    name: Raycast
    params:
      from:
        type: Vec3
      to:
        type: Vec3
      flags:
        type: RayCastFlags
    returns:
      type: RayCastHit
      nullable: true
    example: |
      Events:Subscribe('UpdateManager:Update', function(deltaTime, updatePass)
          if updatePass ~= UpdatePass.UpdatePass_PreSim then
            return
          end
          local rayCastHit = RaycastManager:Raycast(Vec3(0, 0, 0), Vec3(1, 0, 0), RayCastFlags.DontCheckWater)
          if rayCastHit == nil then
            return
          end
          -- Do something with the rayCastHit here
      end)
  -
    name: SpatialRaycast
    params:
      from:
        type: Vec3
      to:
        type: Vec3
      flags:
        type: SpatialQueryFlags
    returns:
      type: Entity
      table: true
  -
    name: DetailedRaycast
    params:
      from:
        type: Vec3
      to:
        type: Vec3
      maxHits:
        type: int
      materialFlags:
        type: MaterialFlags
      flags:
        type: RayCastFlags
    returns:
      type: RayCastHit
      table: true
  -
    name: CollisionRaycast
    params:
      from:
        type: Vec3
      to:
        type: Vec3
      maxHits:
        type: int
      materialFlags:
        type: MaterialFlags
      flags:
        type: RayCastFlags
    returns:
      type: RayCastHit
      table: true


